digit [0-9]*
id [a-zA-Z][a-zA-Z0-9]*
num [0-9]\.[0-9]
%{
int cnt=0,n=0,com=0,scom=0;
%}

%%
\n {scom=0;n++;}
"//" {scom=1;printf("\n single line comment \n");}
"/*" {com=1;printf("\n  comment starts \n");}
"*/" {com=0;printf("\n  comment ends\n");}
int |float |char |double |while |for |struct |typedef |do |if |break |continue |void |switch |return |else |
main { if(!com)printf("\n %s is keyword", yytext);}
"=" { if(!com&&!scom)printf("\n %s ASSIGNMENT OPERATOR EQUALTO", yytext);}
"<=" { if(!com&&!scom)printf("\n %s Relational OPERATOR LESSTHAN EQUALTO", yytext);}
"<" { if(!com&&!scom)printf("\n %s Relational OPERATOR Lessthan", yytext);}
">=" { if(!com&&!scom)printf("\n %s Relational OPERATOR Greater than EQUALTO", yytext);}
">" { if(!com&&!scom)printf("\n %s Relational OPERATOR GREATERTHAN", yytext);}
"==" { if(!com&&!scom)printf("\n %s Relational OPERATOR DOUBLE EQUALTO", yytext);}
"!=" { if(!com&&!scom)printf("\n %s Relational OPERATOR NOT EQUALTO", yytext);}
{id} { if(!com&&!scom)printf("\n %s is identifier", yytext);}
{num} { if(!com&&!scom)printf("\n %s Is number", yytext);}
{digit} { if(!com&&!scom)printf("\n %s are digits", yytext);}

%%

int main(int argc, char **argv)
{
FILE *file;
file=fopen("x.txt",'r');
if(!file)
{
printf("COULD NOT OPEN THE FILE");
}
yyin=file;
yylex();
printf("\n");
return(0);
}
int yywrap()
{
return(1);
}